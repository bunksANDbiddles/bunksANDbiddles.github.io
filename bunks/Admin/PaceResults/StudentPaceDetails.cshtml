@{     
       Layout = "~/bunks/Shared/Layouts/_AdminLayout.cshtml";     
       Page.Title = "Edit Pace Results";          
       
       // Get categoryId from URL, or set to 0 if not present     
       var paceResultID = !UrlData[0].IsEmpty() ? UrlData[0] : "0";     
       var subjectName = ""; 
       var paceNo = "";
       var admissionNo = "";
       var score = ""; 
       var studentID = ""; 
       var SupervisorID = "";
       var teacherName = "";
                   
       var db = Database.Open("BunksAndBiddlesSchool");

       if(IsPost)
       {
       subjectName = Request["subjectName"];
       paceResultID = Request["paceResultID"];
       
       paceNo = Request["paceNo"];
       admissionNo = Request["admissionNo"];
       score = Request["score"];
       studentID = Request["studentID"];
       SupervisorID = Request["SupervisorID"];
       teacherName = Request["teacherName"];


       // Validation
       if (subjectName.IsEmpty())
       {
           ModelState.AddError("subjectName", "Subject Cannot be blank");
       }
     
       if(paceNo.IsEmpty())
       {
           ModelState.AddError("paceNo", "Pace Number cannot be blank");
           
       }
      
       if(admissionNo.IsEmpty())
       {
           ModelState.AddError("admissionNo", "Admission Number cannot be blank");
           
       }

       if(score.IsEmpty())
       {
           ModelState.AddError("score", "Score cannot be blank");
           
       }

       if(teacherName.IsEmpty())
       {
           ModelState.AddError("teacherName", "Teacher Name cannot be blank");
           
       }

   
       if(ModelState.IsValid)
       {
           var sqlUpdateResults = "UPDATE PaceResult SET subjectName = @0, paceNo = @1, admissionNo = @2, score = @3, teacherName = @4, studentID = @5, SupervisorID = @6  WHERE paceResultID = @7";
           db.Execute(sqlUpdateResults, subjectName, paceNo, admissionNo, score, teacherName, studentID, SupervisorID, paceResultID).ToString();

           Response.Redirect("~/bunks/Admin/PaceResults");
       }


     }
     else
     {
         var sqlPaceResults = "SELECT * FROM PaceResult WHERE paceResultID = @0 ";
         subjectName = db.QuerySingle(sqlPaceResults, paceResultID).subjectName;
         teacherName = db.QuerySingle(sqlPaceResults, paceResultID).teacherName;
          admissionNo = db.QuerySingle(sqlPaceResults, paceResultID).admissionNo;
          paceNo = db.QuerySingle(sqlPaceResults, paceResultID).paceNo.ToString();
          score = db.QuerySingle(sqlPaceResults, paceResultID).score.ToString();
          SupervisorID = db.QuerySingle(sqlPaceResults, paceResultID).SupervisorID.ToString();
          studentID = db.QuerySingle(sqlPaceResults, paceResultID).studentID.ToString();
      
        
          
     }
    
}

<h1 class="win-type-title">Student Details</h1>
<hr/>
<br/>


<form action="" method="post">


<div class="column">
 <p class="win-type-body">
 @Html.Hidden("paceResultID", paceResultID)
 @Html.Hidden("SupervisorID", SupervisorID)
 @Html.Hidden("studentID", studentID)
 @Html.Label("Subject :", subjectName)<br />

       @Html.TextBox("subjectName", subjectName, new { @class="win-textbox" })
     @Html.ValidationMessage("subjectName")

     
     </p>

    <p class="win-type-body">

 @Html.Label("Pace No :", paceNo)<br />
@Html.TextBox("paceNo", paceNo, new { @class="win-textbox" } )
@Html.ValidationMessage("paceNo") 
     </p>

  
    </div>

      <div class="column">
      <p class="win-type-body">

 @Html.Label("Admission No:", admissionNo)<br />
@Html.TextBox("admissionNo", admissionNo , new { @class="win-textbox" })
@Html.ValidationMessage("admissionNo") 
     </p>
   <p class="win-type-body">
    @Html.Label("score", "score")
    @Html.TextBox("score", score, new { @class="win-textbox" })
       </p>

      <p class="win-type-body">
    @Html.Label("teacherName", "teacherName")
    @Html.TextBox("teacherName", teacherName, new { @class="win-textbox" })
       </p>
        </div>

   <input type='submit'  class='win-button'  />
</form>

