@{
    
Layout = "~/bunks/Shared/Layouts/_AdminLayout.cshtml";
 Page.Title = "Edit Class"; 

  var pupilID = "new";
 var firstName = "";
 var otherNames = "";
 var admissionNo = "";
 var dateOfBirth = "";
 var classLevel = "";

 var db = Database.Open("BunksAndBiddlesSchool"); 

  // Retrieve pupil details associated to the pupil ID passed in the URL
 if (!UrlData[0].IsEmpty())
 {
 pupilID = UrlData[0];

 var sqlCommand = "SELECT * FROM pupils WHERE pupilID = @0";
 var pupil = db.QuerySingle(sqlCommand, pupilID);

 firstName = pupil.firstName;
 otherNames = pupil.otherNames;
 admissionNo = pupil.admissionNo;
 dateOfBirth = pupil.dateOfBirth.ToShortDateString();

 classLevel = pupil.classLevel.ToString();
 } 


  if(IsPost)
 {
 pupilID = Request["pupilID"];
 firstName = Request["firstName"];
 otherNames = Request["otherNames"];
 admissionNo = Request["admissionNo"];
 dateOfBirth = Request["dateOfBirth"];
 classLevel = Request["classLevel"];

 // Validation 

 if (firstName.IsEmpty())
 {
 ModelState.AddError("firstName", "pupil First Name cannot be blank");
 }

 if (otherNames.IsEmpty())
 {
 ModelState.AddError("otherNames", "pupil Other Names cannot be blank");
 }

 if (admissionNo.IsEmpty())
 {
 ModelState.AddError("admissionNo", "admission Number cannot be blank");
 }
 
  if (dateOfBirth.IsEmpty())
 {
 ModelState.AddError("dateOfBirth", "pupil date of Birth cannot be blank");
 }

 if (classLevel.IsEmpty())
 {
 ModelState.AddError("classLevel", "classLevel cannot be blank");
 }
 
 if(ModelState.IsValid)
 {
 var sql = "";
 if (pupilID == "new")
 {
 // Insert new pupil record
 sql = "INSERT INTO pupils (firstName, otherNames, admissionNo, " +
 "DateOfBirth, classLevel) VALUES (@0, @1, @2, @3, @4)";
 }
 else
 {
 // Update existing pupil record
 sql = "UPDATE pupils SET firstName = @0, otherNames = @1, " +
 "admissionNo = @2, DateOfBirth = @3, classLevel = @4 " +
 "WHERE pupilID = @5";
 }

 db.Execute(sql, firstName, otherNames, admissionNo,
 dateOfBirth, classLevel, pupilID);

 Response.Redirect("~/bunks/Admin/pupils/");
 }
 }   
    
}

<h1 class="win-type-title">pupil Details</h1>
<hr/>
<br/>
<form action="" method="post">


<div class="column">
 <p class="win-type-body">
 @Html.Hidden("pupilID", pupilID)
 @Html.Label("First Name:", firstName)<br />
<input type='text' name="firstName" class='win-textbox'  />
@Html.ValidationMessage("firstName") 
     </p>

     <p class="win-type-body">

 @Html.Label("Other Names:", otherNames)<br />
<input type='text' name="otherNames" class='win-textbox'  />
@Html.ValidationMessage("otherNames") 
     </p>

  
    </div>

      <div class="column">
      <p class="win-type-body">

 @Html.Label("Admission No:", admissionNo)<br />
<input type='text' name="admissionNo" class='win-textbox'  />
@Html.ValidationMessage("admissionNo") 
     </p>
   <p class="win-type-body">
    @Html.Label("Date of Birth: ", "dateOfBirth")
    <input type='text' name="@pupilID.DateOfBirth" class='win-textbox'  />
       </p>
        </div>

   <input type='submit' class='win-button'  />
</form>

